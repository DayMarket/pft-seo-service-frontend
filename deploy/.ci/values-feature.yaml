# Server configuration.
server:
  # The minimum number of replicas.
  replicas: 1

  monitoring:
    enabled: true
    port: http
    honorLabels: true
    interval: 30s
    path: /metrics
    scrapeTimeout: 5s

  # Ingress configuration.
  ingress:
    external:
      annotations:
        nginx.ingress.kubernetes.io/ssl-redirect: 'true'
        kubernetes.io/ingress.allow-http: 'false'
        kubernetes.io/tls-acme: 'true'
        nginx.ingress.kubernetes.io/proxy-buffering: 'on'
        nginx.ingress.kubernetes.io/proxy-buffer-size: '16k'
        nginx.ingress.kubernetes.io/auth-signin: 'https://oauth2.dev.cluster.daymarket.uz/oauth2/start?rd=https://$host$request_uri$is_args$args'
        nginx.ingress.kubernetes.io/auth-url: 'https://oauth2.dev.cluster.daymarket.uz/oauth2/auth'
        nginx.ingress.kubernetes.io/use-regex: "true"
      hosts: [] # Важно что хоста нет т.к. он подставляется на CI
      mainPaths:
        - path: /
        pathType: ImplementationSpecific
        port: 80
      additionalPaths: [ ]

    internal:
      enabled: true
      annotations:
        nginx.ingress.kubernetes.io/ssl-redirect: 'true'
        kubernetes.io/ingress.allow-http: 'false'
        kubernetes.io/tls-acme: 'true'
        nginx.ingress.kubernetes.io/proxy-buffering: 'on'
        nginx.ingress.kubernetes.io/affinity: 'cookie'
        nginx.ingress.kubernetes.io/affinity-mode: 'persistent'
        nginx.ingress.kubernetes.io/session-cookie-name: 'uzum-customers'
        nginx.ingress.kubernetes.io/session-cookie-change-on-failure: 'true'
        nginx.ingress.kubernetes.io/proxy-buffer-size: '16k'
      hosts: [] # Важно что хоста нет т.к. он подставляется на CI
      mainPaths:
        - path: /
          pathType: ImplementationSpecific
          port: 80

    development:
      className: nginx
      enabled: false

  # NodeSelector configuration of the validators.
  nodeSelector:
    app_type: apps

  # Tolerations of the validators pods.
  tolerations:
    - key: app_type
      operator: Equal
      value: apps
      effect: NoSchedule

  # # Annotations used in the server resources.
  # annotations: { }

  autoscaling:
    enabled: false
    replicas:
      min: 3
      max: 10
    targetCPU: 80